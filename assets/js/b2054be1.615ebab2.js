"use strict";(self.webpackChunkdeployer_docs=self.webpackChunkdeployer_docs||[]).push([[2872],{4137:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(h,i(i({ref:n},s),{},{components:t})):a.createElement(h,i({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8065:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(7462),r=(t(7294),t(4137));const o={},i="Cpanel Recipe",l={unversionedId:"contrib/cpanel",id:"contrib/cpanel",title:"Cpanel Recipe",description:"Source",source:"@site/docs/contrib/cpanel.md",sourceDirName:"contrib",slug:"/contrib/cpanel",permalink:"/docs/7.x/contrib/cpanel",draft:!1,editUrl:"https://github.com/deployphp/deployer/edit/master/docs/contrib/cpanel.md",tags:[],version:"current",frontMatter:{},sidebar:"contrib",previous:{title:"Cloudflare Recipe",permalink:"/docs/7.x/contrib/cloudflare"},next:{title:"Crontab Recipe",permalink:"/docs/7.x/contrib/crontab"}},p={},c=[{value:"Description",id:"description",level:3},{value:"Configuration",id:"configuration",level:3},{value:".env file example",id:"env-file-example",level:4},{value:"Tasks",id:"tasks",level:3},{value:"Usage",id:"usage",level:3},{value:"Tasks",id:"tasks-1",level:2},{value:"cpanel:createdb",id:"cpanelcreatedb",level:3},{value:"cpanel:createaddondomain",id:"cpanelcreateaddondomain",level:3},{value:"cpanel:deleteaddondomain",id:"cpaneldeleteaddondomain",level:3}],s={toc:c};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cpanel-recipe"},"Cpanel Recipe"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"require 'contrib/cpanel.php';\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/tree/master/contrib/cpanel.php"},"Source")),(0,r.kt)("h3",{id:"description"},"Description"),(0,r.kt)("p",null,"This is a recipe that uses the ",(0,r.kt)("a",{parentName:"p",href:"https://documentation.cPanel.net/display/DD/Guide+to+cPanel+API+2"},"cPanel 2 API"),"."),(0,r.kt)("p",null,"Unfortunately the ",(0,r.kt)("a",{parentName:"p",href:"https://documentation.cPanel.net/display/DD/Guide+to+UAPI"},"UAPI")," that is recommended does not have support for creating addon domains.\nThe main idea behind is for staging purposes but I guess you can use it for other interesting concepts."),(0,r.kt)("p",null,"The idea is, every branch possibly has its own staging domain/subdomain (staging-neat-feature.project.com) and database db_neat-feature_project so it can be tested.\nThis recipe can make the domain/subdomain and database creation part of the deployment process so you don't have to manually create them through an interface."),(0,r.kt)("h3",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"The example uses a .env file and Dotenv for configuration, but you can set the parameters as you wish"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"set('cpanel', [\n    'host' => getenv('CPANEL_HOST'),\n    'port' => getenv('CPANEL_PORT'),\n    'username' => getenv('CPANEL_USERNAME'),\n    'auth_type' => getenv('CPANEL_AUTH_TYPE'),\n    'token' => getenv('CPANEL_TOKEN'),\n    'user' => getenv('CPANEL_USER'),\n    'db_user' => getenv('CPANEL_DB_USER'),\n    'db_user_privileges' => getenv('CPANEL_DB_PRIVILEGES'),\n    'timeout' => 500,\n\n    'allowInStage' => ['staging', 'beta', 'alpha'],\n\n    'create_domain_format' => '%s-%s-%s',\n    'create_domain_values' => ['staging', 'master', get('application')],\n    'subdomain_prefix' => substr(md5(get('application')), 0,4) . '-',\n    'subdomain_suffix' => getenv('SUDOMAIN_SUFFIX'),\n\n\n    'create_db_format' => '%s_%s-%s-%s',\n    'create_db_values' => ['apps', 'staging','master', get('application')],\n\n]);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cpanel")," \u2013 array with configuration for cPanel",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"username")," \u2013 WHM account"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"user")," \u2013 cPanel account that you want in charge of the domain"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"token")," \u2013 WHM API token"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"create_domain_format")," \u2013 Format for name creation of domain"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"create_domain_values")," \u2013 The actual value reference for naming"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"subdomain_prefix")," \u2013 cPanel has a weird way of dealing with addons and subdomains, you cannot create 2 addons with the same subdomain, so you need to change it in some way, example uses first 4 chars of md5(app_name)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"subdomain_suffix")," \u2013 cPanel has a weird way of dealing with addons and subdomains, so the suffix needs to be your main domain for that account for deletion purposes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addondir"),' \u2013 addon dir is different from the deploy path because cPanel "injects" /home/user/ into the path, so tilde cannot be used'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"allowInStage")," \u2013 Define the stages that cPanel recipe actions are allowed in")))),(0,r.kt)("h4",{id:"env-file-example"},".env file example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'CPANEL_HOST=xxx.xxx.xxx.xxx\nCPANEL_PORT=2087\nCPANEL_USERNAME=root\nCPANEL_TOKEN=xxxx\nCPANEL_USER=xxx\nCPANEL_AUTH_TYPE=hash\nCPANEL_DB_USER=db_user\nCPANEL_DB_PRIVILEGES="ALL PRIVILEGES"\nSUDOMAIN_SUFFIX=.mymaindomain.com\n\n')),(0,r.kt)("h3",{id:"tasks"},"Tasks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cpanel:createaddondomain")," Creates an addon domain"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cpanel:deleteaddondomain")," Removes an addon domain"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cpanel:createdb")," Creates a new database")),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"A complete example with configs, staging and deployment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<?php\n\nnamespace Deployer;\nuse Dotenv\\Dotenv;\n\nrequire 'vendor/autoload.php';\n(Dotenv::create(__DIR__))->load(); // this is used just so an .env file can be used for credentials\n\nrequire 'cpanel.php';\n\n\nProject name\nset('application', 'myproject.com');\nProject repository\nset('repository', 'git@github.com:myorg/myproject.com');\n\n\n\n\n\nset('cpanel', [\n    'host' => getenv('CPANEL_HOST'),\n    'port' => getenv('CPANEL_PORT'),\n    'username' => getenv('CPANEL_USERNAME'),\n    'auth_type' => getenv('CPANEL_AUTH_TYPE'),\n    'token' => getenv('CPANEL_TOKEN'),\n    'user' => getenv('CPANEL_USER'),\n    'db_user' => getenv('CPANEL_DB_USER'),\n    'db_user_privileges' => getenv('CPANEL_DB_PRIVILEGES'),\n    'timeout' => 500,\n    'allowInStage' => ['staging', 'beta', 'alpha'],\n\n    'create_domain_format' => '%s-%s-%s',\n    'create_domain_values' => ['staging', 'master', get('application')],\n    'subdomain_prefix' => substr(md5(get('application')), 0,4) . '-',\n    'subdomain_suffix' => getenv('SUDOMAIN_SUFFIX'),\n\n\n    'create_db_format' => '%s_%s-%s-%s',\n    'create_db_values' => ['apps', 'staging','master', get('application')],\n\n]);\n\nhost('myproject.com')\n    ->stage('staging')\n    ->set('cpanel_createdb', vsprintf(get('cpanel')['create_db_format'], get('cpanel')['create_db_values']))\n    ->set('branch', 'dev-branch')\n    ->set('deploy_path',  '~/staging/' . vsprintf(get('cpanel')['create_domain_format'], get('cpanel')['create_domain_values']))\n    ->set('addondir',  'staging/' . vsprintf(get('cpanel')['create_domain_format'], get('cpanel')['create_domain_values']));\nTasks\ntask('build', function () {\n    run('cd {{release_path}} && build');\n});\n\nafter('deploy:prepare', 'cpanel:createaddondomain');\nafter('deploy:prepare', 'cpanel:createdb');\n")),(0,r.kt)("h2",{id:"tasks-1"},"Tasks"),(0,r.kt)("h3",{id:"cpanelcreatedb"},"cpanel:createdb"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/contrib/cpanel.php#L195"},"Source")),(0,r.kt)("p",null,"Creates database though CPanel API."),(0,r.kt)("h3",{id:"cpanelcreateaddondomain"},"cpanel:createaddondomain"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/contrib/cpanel.php#L223"},"Source")),(0,r.kt)("p",null,"Creates addon domain though CPanel API."),(0,r.kt)("h3",{id:"cpaneldeleteaddondomain"},"cpanel:deleteaddondomain"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/contrib/cpanel.php#L246"},"Source")),(0,r.kt)("p",null,"Deletes addon domain though CPanel API."))}d.isMDXComponent=!0}}]);