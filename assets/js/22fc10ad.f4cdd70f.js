"use strict";(self.webpackChunkdeployer_docs=self.webpackChunkdeployer_docs||[]).push([[4003],{4137:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),m=l,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},9304:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=a(7462),l=(a(7294),a(4137));const r={},i="Configuration",o={unversionedId:"configuration",id:"version-6.x/configuration",title:"Configuration",description:"To setup a configuration parameter, use set function, and to get it inside task use get function.",source:"@site/versioned_docs/version-6.x/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/docs/6.x/configuration",draft:!1,editUrl:"https://github.com/deployphp/deployer/edit/master/versioned_docs/version-6.x/configuration.md",tags:[],version:"6.x",frontMatter:{},sidebar:"version-6.x/docs",previous:{title:"Installation",permalink:"/docs/6.x/installation"},next:{title:"Tasks",permalink:"/docs/6.x/tasks"}},s={},p=[{value:"deploy_path",id:"deploy_path",level:3},{value:"hostname",id:"hostname",level:3},{value:"user",id:"user",level:3},{value:"release_path",id:"release_path",level:3},{value:"previous_release",id:"previous_release",level:3},{value:"ssh_multiplexing",id:"ssh_multiplexing",level:3},{value:"default_stage",id:"default_stage",level:3},{value:"keep_releases",id:"keep_releases",level:3},{value:"repository",id:"repository",level:3},{value:"git_tty",id:"git_tty",level:3},{value:"git_recursive",id:"git_recursive",level:3},{value:"branch",id:"branch",level:3},{value:"shared_dirs",id:"shared_dirs",level:3},{value:"shared_files",id:"shared_files",level:3},{value:"copy_dirs",id:"copy_dirs",level:3},{value:"writable_dirs",id:"writable_dirs",level:3},{value:"writable_mode",id:"writable_mode",level:3},{value:"writable_use_sudo",id:"writable_use_sudo",level:3},{value:"writable_chmod_mode",id:"writable_chmod_mode",level:3},{value:"writable_chmod_recursive",id:"writable_chmod_recursive",level:3},{value:"http_user",id:"http_user",level:3},{value:"clear_paths",id:"clear_paths",level:3},{value:"clear_use_sudo",id:"clear_use_sudo",level:3},{value:"cleanup_use_sudo",id:"cleanup_use_sudo",level:3},{value:"use_relative_symlink",id:"use_relative_symlink",level:3},{value:"use_atomic_symlink",id:"use_atomic_symlink",level:3},{value:"composer_action",id:"composer_action",level:3},{value:"composer_options",id:"composer_options",level:3},{value:"env",id:"env",level:3}],u={toc:p};function d(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"To setup a configuration parameter, use ",(0,l.kt)("inlineCode",{parentName:"p"},"set")," function, and to get it inside task use ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," function."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('param', 'value');\n\ntask('deploy', function () {\n    $param = get('param');\n});\n")),(0,l.kt)("p",null,"Each parameter can be overridden for each host:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"host(...)\n    ->set('param', 'new value');\n")),(0,l.kt)("p",null,"Configuration parameters also can be specified as callback function, which will be executed on remote host on first ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," call:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('current_path', function () {\n    return run('pwd');\n});\n")),(0,l.kt)("p",null,"You can use a param's values inside ",(0,l.kt)("inlineCode",{parentName:"p"},"run")," calls with ",(0,l.kt)("inlineCode",{parentName:"p"},"{{ }}"),", instead of doing this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"run('cd ' . get('release_path') . ' && command');\n")),(0,l.kt)("p",null,"You can do this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"run('cd {{release_path}} && command');\n")),(0,l.kt)("p",null,"Common recipe comes with a few predefined config params listed below. "),(0,l.kt)("p",null,"To get list of available params run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"dep config:dump\n")),(0,l.kt)("p",null,"Show current deployed release:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dep config:current\n")),(0,l.kt)("p",null,"Show inventory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dep config:hosts\n")),(0,l.kt)("p",null,"Below is a list of common variables."),(0,l.kt)("h3",{id:"deploy_path"},"deploy","_","path"),(0,l.kt)("p",null,"Where to deploy application on remote host. You should define this variable for all of your hosts.\nFor example, if you want to deploy your app to home directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"host(...)\n    ->set('deploy_path', '~/project');\n")),(0,l.kt)("h3",{id:"hostname"},"hostname"),(0,l.kt)("p",null,"Current hostname. Automatically set by ",(0,l.kt)("inlineCode",{parentName:"p"},"host")," function."),(0,l.kt)("h3",{id:"user"},"user"),(0,l.kt)("p",null,"Current user name. Defaults to the current git user name:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('user', function () {\n    return runLocally('git config --get user.name');\n});\n")),(0,l.kt)("p",null,"You can override it in ",(0,l.kt)("em",{parentName:"p"},"deploy.php")," for example to use env var:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('user', function () {\n    return getenv('DEP_USER');\n});\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"user")," parameter can be used to configure notification systems:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('slack_text', '{{user}} deploying {{branch}} to {{hostname}}');\n")),(0,l.kt)("h3",{id:"release_path"},"release","_","path"),(0,l.kt)("p",null,"Full path to the current release directory. Current dir path in non-deploy contexts.\nUse it as working path for your build:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"task('build', function () {\n    cd('{{release_path}}');\n    // ...\n});\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"By default, working path is ",(0,l.kt)("inlineCode",{parentName:"p"},"release_path")," for simple task:"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-php"},"task('build', 'webpack -p');\n"))),(0,l.kt)("h3",{id:"previous_release"},"previous","_","release"),(0,l.kt)("p",null,"Points to previous release if it exists. Otherwise variable doesn't exist."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"task('npm', function () {\n    if (has('previous_release')) {\n        run('cp -R {{previous_release}}/node_modules {{release_path}}/node_modules');\n    }\n    \n    run('cd {{release_path}} && npm install');\n});\n")),(0,l.kt)("h3",{id:"ssh_multiplexing"},"ssh","_","multiplexing"),(0,l.kt)("p",null,"Use ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Multiplexing"},"ssh multiplexing")," to speedup the native ssh client."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('ssh_multiplexing', true);\n")),(0,l.kt)("h3",{id:"default_stage"},"default","_","stage"),(0,l.kt)("p",null,"If the hosts declaration has stages, this option allows you to select the default stage to deploy with ",(0,l.kt)("inlineCode",{parentName:"p"},"dep deploy"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('default_stage', 'prod');\n\nhost(...)\n    ->stage('prod');\n")),(0,l.kt)("p",null,"You can also set callable as an argument if you need some more complex ways to determine default stage."),(0,l.kt)("p",null,"Having callable in set() allows you to not set the value when declaring it, but later when it is used. There is no difference\nwhen we assign a simple string. But when we assign value of a function, then this function must be called at once, if not used\nas callable. With callable, it can be called when used, so a function which determines a variable can be overwritten by the user with its own function. This is the great power of having callable in set() instead of direct in function calls."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1: Direct function assign in set()")),(0,l.kt)("p",null,"Lets assume that we must include some third party recipe that is setting 'default_stage' like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('default_stage', \\ThirdPartyVendor\\getDefaultStage());\n")),(0,l.kt)("p",null,"And we want to overwrite this in our deploy.php with our own value:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('default_stage', \\MyVendor\\getDefaultStage());\n")),(0,l.kt)("p",null,"Third party recipe should avoid a direct function call, because it will be called always even if we overwrite it with\nour own set('default_stage', \\MyVendor\\getDefaultStage()). Look at the next example how the third party recipe should use\ncallable in that case."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2: Callable assign in set()")),(0,l.kt)("p",null,"Lets assume that we must include some third party recipe that is setting 'default_stage' like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('default_stage', function() {\n    return \\ThirdPartyVendor\\getDefaultStage();\n});\n")),(0,l.kt)("p",null,"And we want to overwrite this in our deploy.php:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('default_stage', function() {\n    return \\MyVendor\\getDefaultStage();\n});\n")),(0,l.kt)("p",null,"The result is that only \\MyVendor\\getDefaultStage() is run."),(0,l.kt)("h3",{id:"keep_releases"},"keep","_","releases"),(0,l.kt)("p",null,"Number of releases to keep. ",(0,l.kt)("inlineCode",{parentName:"p"},"-1")," for unlimited releases. Default to ",(0,l.kt)("inlineCode",{parentName:"p"},"5"),"."),(0,l.kt)("h3",{id:"repository"},"repository"),(0,l.kt)("p",null,"Git repository of the application."),(0,l.kt)("p",null,"To use a private repository, you need to generate a SSH-key on your host and add it to the repository\nas a Deploy Key (a.k.a. Access Key). This key allows your host to pull out the code. Or use can use agent forwarding. "),(0,l.kt)("p",null,"Note that the first time a host connects, it can ask to add host in ",(0,l.kt)("inlineCode",{parentName:"p"},"known_hosts")," file. The easiest way to do this is\nby running ",(0,l.kt)("inlineCode",{parentName:"p"},"git clone <repo>")," on your host and saying ",(0,l.kt)("inlineCode",{parentName:"p"},"yes")," when prompted."),(0,l.kt)("h3",{id:"git_tty"},"git","_","tty"),(0,l.kt)("p",null,"Allocate TTY for ",(0,l.kt)("inlineCode",{parentName:"p"},"git clone")," command. ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," by default. This allow you to enter a passphrase for keys or add host to ",(0,l.kt)("inlineCode",{parentName:"p"},"known_hosts"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('git_tty', true);\n")),(0,l.kt)("h3",{id:"git_recursive"},"git","_","recursive"),(0,l.kt)("p",null,"Set the ",(0,l.kt)("inlineCode",{parentName:"p"},"--recursive")," flag for git clone. ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," by default. Setting this to ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," will prevent submodules from being cloned as well."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('git_recursive', false);\n")),(0,l.kt)("h3",{id:"branch"},"branch"),(0,l.kt)("p",null,"Branch to deploy."),(0,l.kt)("p",null,"If you want to deploy a specific tag or a revision, you can use ",(0,l.kt)("inlineCode",{parentName:"p"},"--tag")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"--revision")," options while running ",(0,l.kt)("inlineCode",{parentName:"p"},"dep deploy"),". E.g."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'dep deploy --tag="v0.1"\ndep deploy --revision="5daefb59edbaa75"\n')),(0,l.kt)("p",null,"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"tag")," has higher priority than ",(0,l.kt)("inlineCode",{parentName:"p"},"branch")," and lower than ",(0,l.kt)("inlineCode",{parentName:"p"},"revision"),"."),(0,l.kt)("h3",{id:"shared_dirs"},"shared","_","dirs"),(0,l.kt)("p",null,"List of shared dirs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('shared_dirs', [\n    'logs',\n    'var',\n    ...\n]);\n")),(0,l.kt)("h3",{id:"shared_files"},"shared","_","files"),(0,l.kt)("p",null,"List of shared files."),(0,l.kt)("h3",{id:"copy_dirs"},"copy","_","dirs"),(0,l.kt)("p",null,"List of files to copy between release."),(0,l.kt)("h3",{id:"writable_dirs"},"writable","_","dirs"),(0,l.kt)("p",null,"List of dirs which must be writable for web server."),(0,l.kt)("h3",{id:"writable_mode"},"writable","_","mode"),(0,l.kt)("p",null,"Writable mode"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"acl")," (",(0,l.kt)("em",{parentName:"li"},"default"),") use ",(0,l.kt)("inlineCode",{parentName:"li"},"setfacl")," for changing ACL of dirs."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"chmod")," use unix ",(0,l.kt)("inlineCode",{parentName:"li"},"chmod")," command,"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"chown")," use unix ",(0,l.kt)("inlineCode",{parentName:"li"},"chown")," command,"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"chgrp")," use unix ",(0,l.kt)("inlineCode",{parentName:"li"},"chgrp")," command,")),(0,l.kt)("h3",{id:"writable_use_sudo"},"writable","_","use","_","sudo"),(0,l.kt)("p",null,"Whether to use ",(0,l.kt)("inlineCode",{parentName:"p"},"sudo")," with writable command. Default to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,l.kt)("h3",{id:"writable_chmod_mode"},"writable","_","chmod","_","mode"),(0,l.kt)("p",null,"Mode for setting ",(0,l.kt)("inlineCode",{parentName:"p"},"writable_mode")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"chmod"),". Default: ",(0,l.kt)("inlineCode",{parentName:"p"},"0755"),"."),(0,l.kt)("h3",{id:"writable_chmod_recursive"},"writable","_","chmod","_","recursive"),(0,l.kt)("p",null,"Whether to set ",(0,l.kt)("inlineCode",{parentName:"p"},"chmod")," on dirs recursively or not. Default: ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,l.kt)("h3",{id:"http_user"},"http","_","user"),(0,l.kt)("p",null,"User the web server runs as. If this parameter is not configured, deployer try to detect it from the process list. "),(0,l.kt)("h3",{id:"clear_paths"},"clear","_","paths"),(0,l.kt)("p",null,"List of paths which need to be deleted in release after updating code. "),(0,l.kt)("h3",{id:"clear_use_sudo"},"clear","_","use","_","sudo"),(0,l.kt)("p",null,"Use or not ",(0,l.kt)("inlineCode",{parentName:"p"},"sudo")," with clear","_","paths. Default to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,l.kt)("h3",{id:"cleanup_use_sudo"},"cleanup","_","use","_","sudo"),(0,l.kt)("p",null,"Whether to use ",(0,l.kt)("inlineCode",{parentName:"p"},"sudo")," with ",(0,l.kt)("inlineCode",{parentName:"p"},"cleanup")," task. Default to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,l.kt)("h3",{id:"use_relative_symlink"},"use","_","relative","_","symlink"),(0,l.kt)("p",null,"Whether to use relative symlinks. By default deployer will detect if the system supports relative symlinks and use them."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Relative symlink used by default, if your system supports it.")),(0,l.kt)("h3",{id:"use_atomic_symlink"},"use","_","atomic","_","symlink"),(0,l.kt)("p",null,"Whether to use atomic symlinks. By default deployer will detect if system supports atomic symlinks and use them."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Atomic symlinking is used by default, if your system supports it.")),(0,l.kt)("h3",{id:"composer_action"},"composer","_","action"),(0,l.kt)("p",null,"Composer action. Default is ",(0,l.kt)("inlineCode",{parentName:"p"},"install"),"."),(0,l.kt)("h3",{id:"composer_options"},"composer","_","options"),(0,l.kt)("p",null,"Options for Composer."),(0,l.kt)("h3",{id:"env"},"env"),(0,l.kt)("p",null,"Array of environment variables."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"set('env', [\n    'VARIABLE' => 'value',\n]);\n")))}d.isMDXComponent=!0}}]);