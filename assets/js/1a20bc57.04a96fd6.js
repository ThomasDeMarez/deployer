"use strict";(self.webpackChunkdeployer_docs=self.webpackChunkdeployer_docs||[]).push([[4468],{4137:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>y});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=o.createContext({}),c=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=c(t),y=a,m=u["".concat(i,".").concat(y)]||u[y]||s[y]||r;return t?o.createElement(m,l(l({ref:n},d),{},{components:t})):o.createElement(m,l({ref:n},d))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=u;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var c=2;c<r;c++)l[c]=t[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2131:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>s,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var o=t(7462),a=(t(7294),t(4137));const r={},l="CLI Usage",p={unversionedId:"cli",id:"cli",title:"CLI Usage",description:"We recommend adding the following alias to your .bashrc file:",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/docs/7.x/cli",draft:!1,editUrl:"https://github.com/deployphp/deployer/edit/master/docs/cli.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"YAML",permalink:"/docs/7.x/yaml"},next:{title:"API Reference",permalink:"/docs/7.x/api"}},i={},c=[{value:"Overriding configuration options",id:"overriding-configuration-options",level:2},{value:"Running arbitrary commands",id:"running-arbitrary-commands",level:2},{value:"Tree command",id:"tree-command",level:2},{value:"Execution plan",id:"execution-plan",level:2},{value:"The <code>runLocally</code> working dir",id:"the-runlocally-working-dir",level:2},{value:"Play blackjack",id:"play-blackjack",level:2}],d={toc:c};function s(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cli-usage"},"CLI Usage"),(0,a.kt)("p",null,"We recommend adding the following alias to your .bashrc file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"alias dep='vendor/bin/dep'\n")),(0,a.kt)("p",null,"It is also recommended to install the completion script for Deployer. Completion supports:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"tasks,"),(0,a.kt)("li",{parentName:"ul"},"options,"),(0,a.kt)("li",{parentName:"ul"},"host names,"),(0,a.kt)("li",{parentName:"ul"},"and configs.")),(0,a.kt)("p",null,"For example, on macOS run the following commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"brew install bash-completion\ndep completion bash > /usr/local/etc/bash_completion.d/deployer\n")),(0,a.kt)("h2",{id:"overriding-configuration-options"},"Overriding configuration options"),(0,a.kt)("p",null,"For example, if your ",(0,a.kt)("em",{parentName:"p"},"deploy.php")," file contains this configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"set('ssh_multiplexing', false);\n")),(0,a.kt)("p",null,"And you want to enable ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Multiplexing"},"ssh multiplexing")," without modifying the recipe, you can pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"-o")," option to the ",(0,a.kt)("inlineCode",{parentName:"p"},"dep")," command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dep deploy -o ssh_multiplexing=true\n")),(0,a.kt)("p",null,"To override multiple config options, you can pass multiple ",(0,a.kt)("inlineCode",{parentName:"p"},"-o")," args:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dep deploy -o ssh_multiplexing=true -o branch=master\n")),(0,a.kt)("h2",{id:"running-arbitrary-commands"},"Running arbitrary commands"),(0,a.kt)("p",null,"Run any command on one or more hosts:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dep run 'uptime -p'\n")),(0,a.kt)("h2",{id:"tree-command"},"Tree command"),(0,a.kt)("p",null,"Deployer supports ",(0,a.kt)("a",{parentName:"p",href:"/docs/7.x/tasks#task-grouping"},"task grouping")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/7.x/tasks#addbefore"},"before/after hooks"),".\nTo visualize the task hierarchy, use the ",(0,a.kt)("strong",{parentName:"p"},"dep tree")," command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ dep tree deploy\nThe task-tree for deploy:\n\u2514\u2500\u2500 deploy\n    \u251c\u2500\u2500 deploy:prepare\n    \u2502   \u251c\u2500\u2500 deploy:info\n    \u2502   \u251c\u2500\u2500 deploy:setup\n    \u2502   \u251c\u2500\u2500 deploy:lock\n    \u2502   \u251c\u2500\u2500 deploy:release\n    \u2502   \u251c\u2500\u2500 deploy:update_code\n    \u2502   \u251c\u2500\u2500 build  // after deploy:update_code\n    \u2502   \u251c\u2500\u2500 deploy:shared\n    \u2502   \u2514\u2500\u2500 deploy:writable\n    \u251c\u2500\u2500 deploy:vendors\n    \u251c\u2500\u2500 artisan:storage:link\n    \u251c\u2500\u2500 artisan:config:cache\n    \u251c\u2500\u2500 artisan:route:cache\n    \u251c\u2500\u2500 artisan:view:cache\n    \u251c\u2500\u2500 artisan:migrate\n    \u2514\u2500\u2500 deploy:publish\n        \u251c\u2500\u2500 deploy:symlink\n        \u251c\u2500\u2500 deploy:unlock\n        \u251c\u2500\u2500 deploy:cleanup\n        \u2514\u2500\u2500 deploy:success\n")),(0,a.kt)("h2",{id:"execution-plan"},"Execution plan"),(0,a.kt)("p",null,"Before executing tasks, Deployer needs to flatten the task tree and decide in which order it will be executing tasks\non which hosts. Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"--plan")," option to output a table with tasks/hosts:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ dep deploy --plan all\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 prod01               \u2502 prod02               \u2502 prod03               \u2502 prod04               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 deploy:info          \u2502 deploy:info          \u2502 deploy:info          \u2502 deploy:info          \u2502\n\u2502 deploy:setup         \u2502 deploy:setup         \u2502 deploy:setup         \u2502 deploy:setup         \u2502\n\u2502 deploy:lock          \u2502 deploy:lock          \u2502 deploy:lock          \u2502 deploy:lock          \u2502\n\u2502 deploy:release       \u2502 deploy:release       \u2502 deploy:release       \u2502 deploy:release       \u2502\n\u2502 deploy:update_code   \u2502 deploy:update_code   \u2502 deploy:update_code   \u2502 deploy:update_code   \u2502\n\u2502 build                \u2502 build                \u2502 build                \u2502 build                \u2502\n\u2502 deploy:shared        \u2502 deploy:shared        \u2502 deploy:shared        \u2502 deploy:shared        \u2502\n\u2502 deploy:writable      \u2502 deploy:writable      \u2502 deploy:writable      \u2502 deploy:writable      \u2502\n\u2502 deploy:vendors       \u2502 deploy:vendors       \u2502 deploy:vendors       \u2502 deploy:vendors       \u2502\n\u2502 artisan:storage:link \u2502 artisan:storage:link \u2502 artisan:storage:link \u2502 artisan:storage:link \u2502\n\u2502 artisan:config:cache \u2502 artisan:config:cache \u2502 artisan:config:cache \u2502 artisan:config:cache \u2502\n\u2502 artisan:route:cache  \u2502 artisan:route:cache  \u2502 artisan:route:cache  \u2502 artisan:route:cache  \u2502\n\u2502 artisan:view:cache   \u2502 artisan:view:cache   \u2502 artisan:view:cache   \u2502 artisan:view:cache   \u2502\n\u2502 artisan:migrate      \u2502 artisan:migrate      \u2502 artisan:migrate      \u2502 artisan:migrate      \u2502\n\u2502 deploy:symlink       \u2502 -                    \u2502 -                    \u2502 -                    \u2502\n\u2502 -                    \u2502 deploy:symlink       \u2502 -                    \u2502 -                    \u2502\n\u2502 -                    \u2502 -                    \u2502 deploy:symlink       \u2502 -                    \u2502\n\u2502 -                    \u2502 -                    \u2502 -                    \u2502 deploy:symlink       \u2502\n\u2502 deploy:unlock        \u2502 deploy:unlock        \u2502 deploy:unlock        \u2502 deploy:unlock        \u2502\n\u2502 deploy:cleanup       \u2502 deploy:cleanup       \u2502 deploy:cleanup       \u2502 deploy:cleanup       \u2502\n\u2502 deploy:success       \u2502 deploy:success       \u2502 deploy:success       \u2502 deploy:success       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"deploy.php"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"host('prod[01:04]');\ntask('deploy:symlink')->limit(1);\n")),(0,a.kt)("h2",{id:"the-runlocally-working-dir"},"The ",(0,a.kt)("inlineCode",{parentName:"h2"},"runLocally")," working dir"),(0,a.kt)("p",null,"By default, ",(0,a.kt)("inlineCode",{parentName:"p"},"runLocally()")," commands are executed relative to the recipe file directory.\nThis can be overridden globally by setting an environment variable:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"DEPLOYER_ROOT=. dep taskname`\n")),(0,a.kt)("p",null,"Alternatively, the root directory can be overridden per command via the cwd configuration."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"runLocally('ls', ['cwd' => '/root/directory']);\n")),(0,a.kt)("h2",{id:"play-blackjack"},"Play blackjack"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Yeah, well. I'm gonna go build my own theme park... with blackjack and hookers!"),(0,a.kt)("p",{parentName:"blockquote"},"In fact, forget the park!"),(0,a.kt)("p",{parentName:"blockquote"},"\u2014 Bender")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dep blackjack\n")))}s.isMDXComponent=!0}}]);