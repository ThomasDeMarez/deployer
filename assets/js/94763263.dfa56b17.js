"use strict";(self.webpackChunkdeployer_docs=self.webpackChunkdeployer_docs||[]).push([[5405],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),p=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,h=m["".concat(i,".").concat(u)]||m[u]||d[u]||r;return n?o.createElement(h,l(l({ref:t},c),{},{components:n})):o.createElement(h,l({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<r;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7842:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var o=n(7462),a=(n(7294),n(4137));const r={},l="Hosts",s={unversionedId:"hosts",id:"version-6.x/hosts",title:"Hosts",description:"Defining a host in Deployer is necessary to deploy your application. It can be a remote machine, a local machine or Amazon EC2 instances.",source:"@site/versioned_docs/version-6.x/hosts.md",sourceDirName:".",slug:"/hosts",permalink:"/docs/6.x/hosts",draft:!1,editUrl:"https://github.com/deployphp/deployer/edit/master/versioned_docs/version-6.x/hosts.md",tags:[],version:"6.x",frontMatter:{},sidebar:"version-6.x/docs",previous:{title:"Tasks",permalink:"/docs/6.x/tasks"},next:{title:"Flow",permalink:"/docs/6.x/flow"}},i={},p=[{value:"Overriding config per host",id:"overriding-config-per-host",level:3},{value:"Gathering host info",id:"gathering-host-info",level:3},{value:"Multiple hosts",id:"multiple-hosts",level:3},{value:"Host ranges",id:"host-ranges",level:3},{value:"Localhost",id:"localhost",level:3},{value:"Host aliases",id:"host-aliases",level:3},{value:"One host for a few stages",id:"one-host-for-a-few-stages",level:3},{value:"Inventory file",id:"inventory-file",level:3},{value:"Become",id:"become",level:3}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hosts"},"Hosts"),(0,a.kt)("p",null,"Defining a host in Deployer is necessary to deploy your application. It can be a remote machine, a local machine or Amazon EC2 instances.\nEach host contains a hostname, a stage, one or more roles and configuration parameters. "),(0,a.kt)("p",null,"You can define hosts with the ",(0,a.kt)("inlineCode",{parentName:"p"},"host")," function in ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy.php")," file. Here is an example of a host definition:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"host('domain.com')\n    ->stage('production')\n    ->roles('app')\n    ->set('deploy_path', '~/app');\n")),(0,a.kt)("p",null,"Host ",(0,a.kt)("em",{parentName:"p"},"domain.com")," has stage ",(0,a.kt)("inlineCode",{parentName:"p"},"production"),", one role ",(0,a.kt)("inlineCode",{parentName:"p"},"app")," and a configuration parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy_path")," = ",(0,a.kt)("inlineCode",{parentName:"p"},"~/app"),"."),(0,a.kt)("p",null,"Hosts can also be described by using yaml syntax. Write this in a ",(0,a.kt)("inlineCode",{parentName:"p"},"hosts.yml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"domain.com:\n  stage: production\n  roles: app\n  deploy_path: ~/app\n")),(0,a.kt)("p",null,"Then to ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy.php"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"inventory('hosts.yml');\n")),(0,a.kt)("p",null,"Make sure that your ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.ssh/config")," file contains information about your domains and how to connect.\nOr you can specify that information in the ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy.php")," file itself."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"host('domain.com')\n    ->user('name')\n    ->port(22)\n    ->configFile('~/.ssh/config')\n    ->identityFile('~/.ssh/id_rsa')\n    ->forwardAgent(true)\n    ->multiplexing(true)\n    ->addSshOption('UserKnownHostsFile', '/dev/null')\n    ->addSshOption('StrictHostKeyChecking', 'no');\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Best practice")," is to leave connecting information for hosts in the ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.ssh/config")," file.\nThat way you allow different users to connect in different ways.")),(0,a.kt)("h3",{id:"overriding-config-per-host"},"Overriding config per host"),(0,a.kt)("p",null,"For example, if you have some global configuration you can override it per host:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"set('branch', 'master');\n\nhost('prod')\n    ...\n    ->set('branch', 'production');\n")),(0,a.kt)("p",null,"Now onthe  ",(0,a.kt)("em",{parentName:"p"},"prod")," host the branch is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"production"),", on others to ",(0,a.kt)("inlineCode",{parentName:"p"},"master"),"."),(0,a.kt)("h3",{id:"gathering-host-info"},"Gathering host info"),(0,a.kt)("p",null,"Inside any task, you can get host config with the ",(0,a.kt)("inlineCode",{parentName:"p"},"get")," function, and the host object with the ",(0,a.kt)("inlineCode",{parentName:"p"},"host")," function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"task('...', function () {\n    $deployPath = get('deploy_path');\n    \n    $host = host('domain.com');\n    $port = $host->getPort();\n});\n")),(0,a.kt)("h3",{id:"multiple-hosts"},"Multiple hosts"),(0,a.kt)("p",null,"You can pass multiple hosts to the ",(0,a.kt)("inlineCode",{parentName:"p"},"host")," function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"host('110.164.16.59', '110.164.16.34', '110.164.16.50', ...)\n    ->stage('production')\n    ...\n")),(0,a.kt)("p",null,"If your inventory ",(0,a.kt)("inlineCode",{parentName:"p"},"hosts.yml")," file contains multiple, you can change the config for all of them in the same way."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"inventory('hosts.yml')\n    ->roles('app')\n    ...\n")),(0,a.kt)("h3",{id:"host-ranges"},"Host ranges"),(0,a.kt)("p",null,"If you have a lot of hosts following similar patterns, you can describe them like this rather than listing each hostname:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"host('www[01:50].domain.com');\n")),(0,a.kt)("p",null,"For numeric patterns, leading zeros can be included or removed, as desired. Ranges are inclusive. "),(0,a.kt)("p",null,"You can also define alphabetic ranges:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"host('db[a:f].domain.com');\n")),(0,a.kt)("h3",{id:"localhost"},"Localhost"),(0,a.kt)("p",null,"If you need to build your release before deploying on a remote machine, or deploy to localhost instead of remote,\nyou need to define localhost:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"localhost()\n    ->stage('production')\n    ->roles('test', 'build')\n    ...\n")),(0,a.kt)("h3",{id:"host-aliases"},"Host aliases"),(0,a.kt)("p",null,"If you want to deploy an app to one host, but for example in different directories, you can describe two host aliases:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"host('domain.com/green', 'domain.com/blue')\n    ->set('deploy_path', '~/{{hostname}}')\n    ...\n")),(0,a.kt)("p",null,"For Deployer, those hosts are different ones, and after deploying to both hosts you will see this directory structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"~\n\u2514\u2500\u2500 domain.com\n    \u251c\u2500\u2500 green\n    \u2502   \u2514\u2500\u2500 ...\n    \u2514\u2500\u2500 blue\n        \u2514\u2500\u2500 ...\n")),(0,a.kt)("h3",{id:"one-host-for-a-few-stages"},"One host for a few stages"),(0,a.kt)("p",null,"Often you have only one server for prod and beta stages. You can easily configure them:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"host('production')\n    ->hostname('domain.com')\n    ->set('deploy_path', '~/domain.com');\n    \nhost('beta')\n    ->hostname('domain.com')\n    ->set('deploy_path', '~/beta.domain.com');    \n")),(0,a.kt)("p",null,"Now you can deploy with these commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"dep deploy production\ndep deploy beta\n")),(0,a.kt)("h3",{id:"inventory-file"},"Inventory file"),(0,a.kt)("p",null,"Include hosts defined in inventory files ",(0,a.kt)("inlineCode",{parentName:"p"},"hosts.yml")," by ",(0,a.kt)("inlineCode",{parentName:"p"},"inventory")," function:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"inventory('hosts.yml');\n")),(0,a.kt)("p",null,"Here an example of an inventory file ",(0,a.kt)("inlineCode",{parentName:"p"},"hosts.yml")," with the full set of configuration settings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'domain.com:\n  hostname: domain.com\n  user: name\n  port: 22\n  configFile: ~/.ssh/config\n  identityFile: ~/.ssh/id_rsa\n  forwardAgent: true\n  multiplexing: true\n  sshOptions:\n    UserKnownHostsFile: /dev/null\n    StrictHostKeyChecking: no\n  stage: production\n  roles:\n    - app\n    - db\n  deploy_path: ~/app\n  extra_param: "foo {{hostname}}"\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note")," that, as with the ",(0,a.kt)("inlineCode",{parentName:"p"},"host")," function in the ",(0,a.kt)("em",{parentName:"p"},"deploy.php")," file, it's better to omit information such as\n",(0,a.kt)("em",{parentName:"p"},"user"),", ",(0,a.kt)("em",{parentName:"p"},"port"),", ",(0,a.kt)("em",{parentName:"p"},"identityFile"),", ",(0,a.kt)("em",{parentName:"p"},"forwardAgent")," and use it from the ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.ssh/config")," file instead.")),(0,a.kt)("p",null,"If your inventory file contains many similar host definitions, you can use YAML extend syntax:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},".base: &base\n  roles: app\n  deploy_path: ~/app\n  ...\n\nwww1.domain.com:\n  <<: *base\n  stage: production\n  \nbeta1.domain.com:\n  <<: *base\n  stage: beta\n    \n...\n")),(0,a.kt)("p",null,"Hosts that start with ",(0,a.kt)("inlineCode",{parentName:"p"},".")," (",(0,a.kt)("em",{parentName:"p"},"dot"),") are called hidden and are not visible outside that file."),(0,a.kt)("p",null,"To define localhost in inventory files add a ",(0,a.kt)("inlineCode",{parentName:"p"},"local")," key:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"localhost:\n  local: true\n  roles: build\n  ...\n")),(0,a.kt)("h3",{id:"become"},"Become"),(0,a.kt)("p",null,"Deployer allows you to \u2018become\u2019 another user, different from the user that logged into the machine (remote user)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"host('domain.com')\n    ->become('deployer')\n    ...\n")),(0,a.kt)("p",null,"Deployer uses ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo")," privilege escalation method by default."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note")," that become doesn't work with ",(0,a.kt)("inlineCode",{parentName:"p"},"tty")," run option.")),(0,a.kt)("p",null,"Next: ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/flow"},"deployment flow"),"."))}d.isMDXComponent=!0}}]);