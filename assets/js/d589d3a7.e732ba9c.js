"use strict";(self.webpackChunkdeployer_docs=self.webpackChunkdeployer_docs||[]).push([[7162],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(n),m=o,h=c["".concat(l,".").concat(m)]||c[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8094:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(7462),o=(n(7294),n(4137));const a={},i="Getting Started",p={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"In this tutorial we will cover:",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/7.x/getting-started",draft:!1,editUrl:"https://github.com/deployphp/deployer/edit/master/docs/getting-started.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/7.x/installation"},next:{title:"Basics",permalink:"/docs/7.x/basics"}},l={},s=[{value:"Provision",id:"provision",level:2},{value:"Deploy",id:"deploy",level:2}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"In this tutorial we will cover:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Setting up a new host with the ",(0,o.kt)("a",{parentName:"li",href:"/docs/7.x/recipe/provision"},"provision")," recipe."),(0,o.kt)("li",{parentName:"ul"},"Configuring a deployment and perfoming our first deploy.")),(0,o.kt)("p",null,"First, ",(0,o.kt)("a",{parentName:"p",href:"/docs/7.x/installation"},"install Deployer"),":"),(0,o.kt)("p",null,"Now lets cd into the project and run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"dep init\n")),(0,o.kt)("p",null,"Deployer will ask you a few questions, and after finishing you will have a\n",(0,o.kt)("strong",{parentName:"p"},"deploy.php")," or ",(0,o.kt)("strong",{parentName:"p"},"deploy.yaml")," file. This is our deployment recipe.\nIt contains hosts, tasks and requires other recipes. All framework recipes\nthat come with Deployer are based on the ",(0,o.kt)("a",{parentName:"p",href:"/docs/7.x/recipe/common"},"common")," recipe."),(0,o.kt)("h2",{id:"provision"},"Provision"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If you already have a configured webserver you may skip to\n",(0,o.kt)("a",{parentName:"p",href:"#deploy"},"deployment"),".")),(0,o.kt)("p",null,"Let's create a new VPS on Linode, DigitalOcean, Vultr, AWS, GCP, etc."),(0,o.kt)("p",null,"Make sure the image is ",(0,o.kt)("strong",{parentName:"p"},"Ubuntu 20.04 LTS")," as this version is supported by\nDeployer's ",(0,o.kt)("a",{parentName:"p",href:"/docs/7.x/recipe/provision"},"provision")," recipe."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Configure a DNS record for your domain that points to the IP address of your server.\nThis will allow you to ssh into the server using your domain name instead of the IP address.")),(0,o.kt)("p",null,"Our ",(0,o.kt)("strong",{parentName:"p"},"deploy.php")," recipe contains a host definition with a few important params:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"remote_user")," the user name for the ssh connection,"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"deploy_path")," the file path on the host where we are going to deploy.")),(0,o.kt)("p",null,"Let's set ",(0,o.kt)("inlineCode",{parentName:"p"},"remote_user")," to be ",(0,o.kt)("inlineCode",{parentName:"p"},"deployer"),". Right now our new server probably only has the ",(0,o.kt)("inlineCode",{parentName:"p"},"root")," user. The provision recipe will\ncreate and configure a ",(0,o.kt)("inlineCode",{parentName:"p"},"deployer")," user for us."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"host('example.org')\n    ->set('remote_user', 'deployer')\n    ->set('deploy_path', '~/example');\n")),(0,o.kt)("p",null,"To connect to the remote host we need to specify an identity key or private key.\nWe can add our identity key directly into the host definition, but it's better to put it\nin the ",(0,o.kt)("strong",{parentName:"p"},"~/.ssh/config")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Host *\n  IdentityFile ~/.ssh/id_rsa\n")),(0,o.kt)("p",null,"Now let's provision our server. As our host doesn't have a user ",(0,o.kt)("inlineCode",{parentName:"p"},"deployer"),",\nwe are going to override ",(0,o.kt)("inlineCode",{parentName:"p"},"remote_user")," for provisioning via ",(0,o.kt)("inlineCode",{parentName:"p"},"-o remote_user=root"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"dep provision -o remote_user=root\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If your server doesn't have a ",(0,o.kt)("inlineCode",{parentName:"p"},"root")," user but your remote user can use ",(0,o.kt)("inlineCode",{parentName:"p"},"sudo")," to\nbecome root, then use:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"dep provision -o become=root\n"))),(0,o.kt)("p",null,"Deployer will ask you a few questions during provisioning: php version,\ndatabase type, etc. Next, Deployer will configure our server and create\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"deployer")," user. Provisioning takes around ",(0,o.kt)("strong",{parentName:"p"},"5 minutes")," and will install\neverything we need to run a website. A new website will be configured\nat ",(0,o.kt)("a",{parentName:"p",href:"/docs/7.x/recipe/common#deploy_path"},"deploy_path"),"."),(0,o.kt)("p",null,"After we have configured the webserver, let's deploy the project."),(0,o.kt)("h2",{id:"deploy"},"Deploy"),(0,o.kt)("p",null,"To deploy the project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"dep deploy\n")),(0,o.kt)("p",null,"If deploy failed, Deployer will print an error message and which command was unsuccessful.\nMost likely we need to configure the correct database credentials in the ",(0,o.kt)("em",{parentName:"p"},".env")," file or similar."),(0,o.kt)("p",null,"Ssh to the host, for example, for editing the ",(0,o.kt)("em",{parentName:"p"},".env")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"dep ssh\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If your webserver is using an OpenSSH version older than v7.6, updating the code may fail with the error\nmessage ",(0,o.kt)("inlineCode",{parentName:"p"},'unsupported option "accept-new".')," In this case, override the Git SSH command with:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-php"},"set('git_ssh_command', 'ssh');\n"))),(0,o.kt)("p",null,"After everything is configured properly we can resume our deployment from the\nplace it stopped. However, this is not required; we can just start a new deploy:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"dep deploy --start-from deploy:migrate\n")),(0,o.kt)("p",null,"After our first successful deployment, we can find the following directory structure on our server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"~/example                      // The deploy_path.\n |- current -> releases/1      // Symlink to the current release.\n |- releases                   // Dir for all releases.\n    |- 1                       // Actual files location.\n       |- ...\n       |- .env -> shared/.env  // Symlink to shared .env file.\n |- shared                     // Dirs for shared files between releases.\n    |- ...\n    |- .env                    // Example: shared .env file.\n |- .dep                       // Deployer configuration files.\n")),(0,o.kt)("p",null,"Configure you webserver to serve the ",(0,o.kt)("inlineCode",{parentName:"p"},"current")," directory. For example, for nginx:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"root /home/deployer/example/current/public;\nindex index.php;\nlocation / {\n    try_files $uri $uri/ /index.php?$query_string;\n}\n")),(0,o.kt)("p",null,"If you're using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/7.x/recipe/provision"},"provision recipe"),", Deployer will automatically configure the Caddy\nwebserver to serve from the ",(0,o.kt)("a",{parentName:"p",href:"/docs/7.x/recipe/provision/website#public_path"},"public_path"),"."),(0,o.kt)("p",null,"Now let's add a build step on our host:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"task('build', function () {\n    cd('{{release_path}}');\n    run('npm install');\n    run('npm run prod');\n});\n\nafter('deploy:update_code', 'build');\n")),(0,o.kt)("p",null,"Deployer has a useful task for examining what is currently deployed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ dep releases\ntask releases\n+---------------------+--------- deployer.org -------+--------+-----------+\n| Date (UTC)          | Release     | Author         | Target | Commit    |\n+---------------------+-------------+----------------+--------+-----------+\n| 2021-11-05 14:00:22 | 1 (current) | Anton Medvedev | HEAD   | 943ded2be |\n+---------------------+-------------+----------------+--------+-----------+\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"During development, the ",(0,o.kt)("a",{parentName:"p",href:"/docs/7.x/recipe/deploy/push"},"dep push")," task maybe useful\nto create a patch of local changes and push them to the host.")))}u.isMDXComponent=!0}}]);