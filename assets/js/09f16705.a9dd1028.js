"use strict";(self.webpackChunkdeployer_docs=self.webpackChunkdeployer_docs||[]).push([[9392],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var a=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=a.createContext({}),i=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=i(r),h=l,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||n;return r?a.createElement(m,p(p({ref:t},u),{},{components:r})):a.createElement(m,p({ref:t},u))}));function h(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,p=new Array(n);p[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,p[1]=o;for(var i=2;i<n;i++)p[i]=r[i];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7634:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>n,metadata:()=>o,toc:()=>i});var a=r(7462),l=(r(7294),r(4137));const n={},p="Release Recipe",o={unversionedId:"recipe/deploy/release",id:"recipe/deploy/release",title:"Release Recipe",description:"Source",source:"@site/docs/recipe/deploy/release.md",sourceDirName:"recipe/deploy",slug:"/recipe/deploy/release",permalink:"/docs/7.x/recipe/deploy/release",draft:!1,editUrl:"https://github.com/deployphp/deployer/edit/master/docs/recipe/deploy/release.md",tags:[],version:"current",frontMatter:{}},s={},i=[{value:"Configuration",id:"configuration",level:2},{value:"release_name",id:"release_name",level:3},{value:"releases_log",id:"releases_log",level:3},{value:"releases_list",id:"releases_list",level:3},{value:"release_path",id:"release_path",level:3},{value:"release_revision",id:"release_revision",level:3},{value:"release_or_current_path",id:"release_or_current_path",level:3},{value:"Tasks",id:"tasks",level:2},{value:"deploy:release",id:"deployrelease",level:3},{value:"releases",id:"releases",level:3}],u={toc:i};function c(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"release-recipe"},"Release Recipe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"require 'recipe/deploy/release.php';\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/tree/master/recipe/deploy/release.php"},"Source")),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("h3",{id:"release_name"},"release_name"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/recipe/deploy/release.php#L9"},"Source")),(0,l.kt)("p",null,"The name of the release."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Default value"',title:'"Default','value"':!0},"return within('{{deploy_path}}', function () {\n$latest = run('cat .dep/latest_release || echo 0');\nreturn strval(intval($latest) + 1);\n});\n")),(0,l.kt)("h3",{id:"releases_log"},"releases_log"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/recipe/deploy/release.php#L17"},"Source")),(0,l.kt)("p",null,"Holds releases log from ",(0,l.kt)("inlineCode",{parentName:"p"},".dep/releases_log")," file."),(0,l.kt)("admonition",{title:"Autogenerated",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"The value of this configuration is autogenerated on access.")),(0,l.kt)("h3",{id:"releases_list"},"releases_list"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/recipe/deploy/release.php#L32"},"Source")),(0,l.kt)("p",null,"Return list of release names on host."),(0,l.kt)("admonition",{title:"Autogenerated",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"The value of this configuration is autogenerated on access.")),(0,l.kt)("h3",{id:"release_path"},"release_path"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/recipe/deploy/release.php#L59"},"Source")),(0,l.kt)("p",null,"Return release path."),(0,l.kt)("admonition",{title:"Autogenerated",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"The value of this configuration is autogenerated on access.")),(0,l.kt)("h3",{id:"release_revision"},"release_revision"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/recipe/deploy/release.php#L70"},"Source")),(0,l.kt)("p",null,"Current release revision. Usually a git hash."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Default value"',title:'"Default','value"':!0},"return run('cat {{release_path}}/REVISION');\n")),(0,l.kt)("h3",{id:"release_or_current_path"},"release_or_current_path"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/recipe/deploy/release.php#L76"},"Source")),(0,l.kt)("p",null,"Return the release path during a deployment\nbut fallback to the current path otherwise."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Default value"',title:'"Default','value"':!0},"$releaseExists = test('[ -h {{deploy_path}}/release ]');\nreturn $releaseExists ? get('release_path') : get('current_path');\n")),(0,l.kt)("h2",{id:"tasks"},"Tasks"),(0,l.kt)("h3",{id:"deployrelease"},"deploy:release"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/recipe/deploy/release.php#L83"},"Source")),(0,l.kt)("p",null,"Prepares release."),(0,l.kt)("p",null,"Clean up unfinished releases and prepare next release"),(0,l.kt)("h3",{id:"releases"},"releases"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/deployphp/deployer/blob/master/recipe/deploy/release.php#L158"},"Source")),(0,l.kt)("p",null,"Shows releases list."),(0,l.kt)("p",null,"Example output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"+---------------------+------example.org ------------+--------+-----------+\n| Date (UTC)          | Release     | Author         | Target | Commit    |\n+---------------------+-------------+----------------+--------+-----------+\n| 2021-11-06 20:51:45 | 1           | Anton Medvedev | HEAD   | 34d24192e |\n| 2021-11-06 21:00:50 | 2 (bad)     | Anton Medvedev | HEAD   | 392948a40 |\n| 2021-11-06 23:19:20 | 3           | Anton Medvedev | HEAD   | a4057a36c |\n| 2021-11-06 23:24:30 | 4 (current) | Anton Medvedev | HEAD   | s3wa45ca6 |\n+---------------------+-------------+----------------+--------+-----------+\n")))}c.isMDXComponent=!0}}]);