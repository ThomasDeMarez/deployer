"use strict";(self.webpackChunkdeployer_docs=self.webpackChunkdeployer_docs||[]).push([[7911],{4137:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=l.createContext({}),p=function(e){var t=l.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return l.createElement(u.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,c=d["".concat(u,".").concat(m)]||d[m]||k[m]||i;return n?l.createElement(c,o(o({ref:t},s),{},{components:n})):l.createElement(c,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r.mdxType="string"==typeof e?e:a,o[1]=r;for(var p=2;p<i;p++)o[p]=n[p];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>k,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var l=n(7462),a=(n(7294),n(4137));const i={},o="API Reference",r={unversionedId:"api",id:"version-6.x/api",title:"API Reference",description:"host",source:"@site/versioned_docs/version-6.x/api.md",sourceDirName:".",slug:"/api",permalink:"/docs/6.x/api",draft:!1,editUrl:"https://github.com/deployphp/deployer/edit/master/versioned_docs/version-6.x/api.md",tags:[],version:"6.x",frontMatter:{},sidebar:"version-6.x/docs",previous:{title:"Inventory",permalink:"/docs/6.x/inventory"},next:{title:"CLI Usage",permalink:"/docs/6.x/cli"}},u={},p=[{value:"host",id:"host",level:3},{value:"localhost",id:"localhost",level:3},{value:"inventory",id:"inventory",level:3},{value:"desc",id:"desc",level:3},{value:"task",id:"task",level:3},{value:"before",id:"before",level:3},{value:"after",id:"after",level:3},{value:"fail",id:"fail",level:3},{value:"argument",id:"argument",level:3},{value:"option",id:"option",level:3},{value:"cd",id:"cd",level:3},{value:"within",id:"within",level:3},{value:"workingPath",id:"workingpath",level:3},{value:"run",id:"run",level:3},{value:"runLocally",id:"runlocally",level:3},{value:"test",id:"test",level:3},{value:"testLocally",id:"testlocally",level:3},{value:"on",id:"on",level:3},{value:"roles",id:"roles",level:3},{value:"invoke",id:"invoke",level:3},{value:"upload",id:"upload",level:3},{value:"download",id:"download",level:3},{value:"write",id:"write",level:3},{value:"writeln",id:"writeln",level:3},{value:"set",id:"set",level:3},{value:"add",id:"add",level:3},{value:"get",id:"get",level:3},{value:"has",id:"has",level:3},{value:"ask",id:"ask",level:3},{value:"askChoice",id:"askchoice",level:3},{value:"askConfirmation",id:"askconfirmation",level:3},{value:"askHiddenResponse",id:"askhiddenresponse",level:3},{value:"input",id:"input",level:3},{value:"output",id:"output",level:3},{value:"isQuiet",id:"isquiet",level:3},{value:"isVerbose",id:"isverbose",level:3},{value:"isVeryVerbose",id:"isveryverbose",level:3},{value:"isDebug",id:"isdebug",level:3},{value:"commandExist",id:"commandexist",level:3},{value:"parse",id:"parse",level:3}],s={toc:p};function k(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"api-reference"},"API Reference"),(0,a.kt)("h3",{id:"host"},"host"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"host(string ...$hostname): Host"))),(0,a.kt)("p",null,"Define a host or group of hosts. Read more at ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/hosts"},"hosts"),"."),(0,a.kt)("h3",{id:"localhost"},"localhost"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"localhost(string ...$alias = 'localhost'): Host"))),(0,a.kt)("p",null,"Define a localhost."),(0,a.kt)("h3",{id:"inventory"},"inventory"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"inventory(string $file): Host[]"))),(0,a.kt)("p",null,"Load a list of hosts from a file."),(0,a.kt)("h3",{id:"desc"},"desc"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"desc(string $description)"))),(0,a.kt)("p",null,"Set a task description."),(0,a.kt)("h3",{id:"task"},"task"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"task(string $name, string $script)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"task(string $name, callable $callable)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"task(string $name): Task"))),(0,a.kt)("p",null,"Define a task or get a task. More at ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/tasks"},"tasks"),"."),(0,a.kt)("h3",{id:"before"},"before"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"before(string $when, string $that)"))),(0,a.kt)("p",null,"Call before ",(0,a.kt)("inlineCode",{parentName:"p"},"$when")," task, ",(0,a.kt)("inlineCode",{parentName:"p"},"$that")," task."),(0,a.kt)("h3",{id:"after"},"after"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"after(string $when, string $that)"))),(0,a.kt)("p",null,"Call after ",(0,a.kt)("inlineCode",{parentName:"p"},"$when")," task, ",(0,a.kt)("inlineCode",{parentName:"p"},"$that")," task."),(0,a.kt)("h3",{id:"fail"},"fail"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fail(string $what, string $that)"))),(0,a.kt)("p",null,"If task ",(0,a.kt)("inlineCode",{parentName:"p"},"$what")," fails, run ",(0,a.kt)("inlineCode",{parentName:"p"},"$that")," task."),(0,a.kt)("h3",{id:"argument"},"argument"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"argument($name, $mode = null, $description = '', $default = null)"))),(0,a.kt)("p",null,"Add user's cli arguments."),(0,a.kt)("h3",{id:"option"},"option"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"option($name, $shortcut=null, $mode=null, $description='', $default=null)"))),(0,a.kt)("p",null,"Add user's cli options."),(0,a.kt)("h3",{id:"cd"},"cd"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"cd(string $path)"))),(0,a.kt)("p",null,"Sets the working path for the following ",(0,a.kt)("inlineCode",{parentName:"p"},"run")," functions.\nEvery task restores the working path to the base working path at the beginning of the task."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"cd('{{release_path}}');\nrun('npm run build');\n")),(0,a.kt)("h3",{id:"within"},"within"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"within(string $path, callable $callback)"))),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"$callback")," within ",(0,a.kt)("inlineCode",{parentName:"p"},"$path"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"within('{{release_path}}', function () {\n    run('npm run build');   \n});\n")),(0,a.kt)("h3",{id:"workingpath"},"workingPath"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"workingPath(): string"))),(0,a.kt)("p",null,"Return the current working path."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"cd('{{release_path}}');\nworkingPath() == '/var/www/app/releases/1';\n")),(0,a.kt)("h3",{id:"run"},"run"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"run(string $command, $options = []): string"))),(0,a.kt)("p",null,"Run a command on remote host. Available options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timeout")," \u2014 Sets the process timeout (max. runtime).",(0,a.kt)("br",{parentName:"li"}),"To disable the timeout, set this value to null.",(0,a.kt)("br",{parentName:"li"}),"The timeout in seconds (default: 300 sec)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tty")," \u2014 Enables or disables the TTY mode (default: false)")),(0,a.kt)("p",null,"For example, if your private key contains a passphrase, enable tty and you'll see git prompt for a password. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"run('git clone ...', ['timeout' => null, 'tty' => true]);\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"run")," function returns the output of the command as a string:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"$path = run('readlink {{deploy_path}}/current');\nrun(\"echo $path\");\n")),(0,a.kt)("h3",{id:"runlocally"},"runLocally"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"runLocally($command, $options = []): string"))),(0,a.kt)("p",null,"Run a command on localhost. Available options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timeout")," \u2014 The timeout in seconds (default: 300 sec)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tty")," \u2014 The TTY mode (default: false)")),(0,a.kt)("h3",{id:"test"},"test"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test(string $command): bool"))),(0,a.kt)("p",null,"Run a test command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"if (test('[ -d {{release_path}} ]')) {\n    ...\n}\n")),(0,a.kt)("h3",{id:"testlocally"},"testLocally"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"testLocally(string $command): bool"))),(0,a.kt)("p",null,"Run a test command locally."),(0,a.kt)("h3",{id:"on"},"on"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"on(Host $host, callable $callback)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"on(Host[] $host, callable $callback)"))),(0,a.kt)("p",null,"Execute a ",(0,a.kt)("inlineCode",{parentName:"p"},"$callback")," on the specified hosts."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"on(host('domain.com'), function ($host) {\n   ...\n});\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"on(roles('app'), function ($host) {\n   ...\n});\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"on(Deployer::get()->hosts, function ($host) {\n   ...\n});\n")),(0,a.kt)("h3",{id:"roles"},"roles"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles(string ...$role): Host[]"))),(0,a.kt)("p",null,"Return a list of hosts by roles."),(0,a.kt)("h3",{id:"invoke"},"invoke"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"invoke(string $task)"))),(0,a.kt)("p",null,"Run a task on the current host. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"task('deploy', function () {\n    invoke('deploy:prepare'); \n    invoke('deploy:release');\n    ...\n});\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note")," this is experimental functionality.")),(0,a.kt)("h3",{id:"upload"},"upload"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"upload(string $source, string $destination, $config = [])"))),(0,a.kt)("p",null,"Upload files from ",(0,a.kt)("inlineCode",{parentName:"p"},"$source")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"$destination")," on the remote host."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"upload('build/', '{{release_path}}/public');\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'You may have noticed that there is a trailing slash (/) at the end of the first argument in the above command,\nthis is necessary to mean "the contents of ',(0,a.kt)("inlineCode",{parentName:"p"},"build"),'".'),(0,a.kt)("p",{parentName:"blockquote"},"The alternative, without the trailing slash, would place ",(0,a.kt)("inlineCode",{parentName:"p"},"build"),", including the directory, within ",(0,a.kt)("inlineCode",{parentName:"p"},"public"),".\nThis would create a hierarchy that looks like: ",(0,a.kt)("inlineCode",{parentName:"p"},"{{release_path}}/public/build"))),(0,a.kt)("p",null,"Available options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timeout")," \u2014 The timeout in seconds (default: null)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"options")," \u2014 ",(0,a.kt)("inlineCode",{parentName:"li"},"rsync")," options.")),(0,a.kt)("h3",{id:"download"},"download"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"download(string $source, string $destination, $config = [])"))),(0,a.kt)("p",null,"Download files from the remote host ",(0,a.kt)("inlineCode",{parentName:"p"},"$source")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"$destination")," on the local machine."),(0,a.kt)("p",null,"Available options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timeout")," \u2014 The timeout in seconds (default: null)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"options")," \u2014 ",(0,a.kt)("inlineCode",{parentName:"li"},"rsync")," options.")),(0,a.kt)("h3",{id:"write"},"write"),(0,a.kt)("p",null,"Write a message in the output.\nYou can format the message with the tags ",(0,a.kt)("inlineCode",{parentName:"p"},"<info>...</info>"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"<comment></comment>")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"<error></error>")," (see ",(0,a.kt)("a",{parentName:"p",href:"http://symfony.com/doc/current/console/coloring.html"},"Symfony Console"),")."),(0,a.kt)("h3",{id:"writeln"},"writeln"),(0,a.kt)("p",null,"Same as the ",(0,a.kt)("inlineCode",{parentName:"p"},"write")," function, but also writes a new line."),(0,a.kt)("h3",{id:"set"},"set"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set(string $name, string|int|bool|array $value)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set(string $name, callable $value)"))),(0,a.kt)("p",null,"Setup a global configuration parameter. If callable is passed as ",(0,a.kt)("inlineCode",{parentName:"p"},"$value")," it will be triggered on the first get of this config."),(0,a.kt)("p",null,"More at ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/configuration"},"configuration"),"."),(0,a.kt)("h3",{id:"add"},"add"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"add(string $name, array $values)"))),(0,a.kt)("p",null,"Add values to already existing config. "),(0,a.kt)("p",null,"More at ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/configuration"},"configuration"),"."),(0,a.kt)("h3",{id:"get"},"get"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"get(string $name, $default = null): string|int|bool|array"))),(0,a.kt)("p",null,"Get a configuration value."),(0,a.kt)("p",null,"More at ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/configuration"},"configuration"),"."),(0,a.kt)("h3",{id:"has"},"has"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"has(string $name): bool"))),(0,a.kt)("p",null,"Check if a config option exists."),(0,a.kt)("p",null,"More at ",(0,a.kt)("a",{parentName:"p",href:"/docs/6.x/configuration"},"configuration"),"."),(0,a.kt)("h3",{id:"ask"},"ask"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ask(string $message, $default = null, $suggestedChoices = null)"))),(0,a.kt)("p",null,"Ask the user for input."),(0,a.kt)("h3",{id:"askchoice"},"askChoice"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"askChoice(string $message, array $availableChoices, $default = null, $multiselect = false)"))),(0,a.kt)("p",null,"Ask the user to select from multiple key/value options and return an array.\nMultiselect enables selection of multiple comma separated choices.\nThe default value will be used in quiet mode, otherwise the first available choice will be accepted."),(0,a.kt)("h3",{id:"askconfirmation"},"askConfirmation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"askConfirmation(string $message, bool $default = false)"))),(0,a.kt)("p",null,"Ask the user a yes or no question."),(0,a.kt)("h3",{id:"askhiddenresponse"},"askHiddenResponse"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"askHiddenResponse(string $message)"))),(0,a.kt)("p",null,"Ask the user for a password."),(0,a.kt)("h3",{id:"input"},"input"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"input(): Input"))),(0,a.kt)("p",null,"Get the current console input."),(0,a.kt)("h3",{id:"output"},"output"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"output(): Output"))),(0,a.kt)("p",null,"Get the current console output."),(0,a.kt)("h3",{id:"isquiet"},"isQuiet"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"isQuiet(): bool"))),(0,a.kt)("p",null,"Check if th ",(0,a.kt)("inlineCode",{parentName:"p"},"dep")," command was started with the ",(0,a.kt)("inlineCode",{parentName:"p"},"-q")," option."),(0,a.kt)("h3",{id:"isverbose"},"isVerbose"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"isVerbose(): bool"))),(0,a.kt)("p",null,"Check if the ",(0,a.kt)("inlineCode",{parentName:"p"},"dep")," command was started with the ",(0,a.kt)("inlineCode",{parentName:"p"},"-v")," option."),(0,a.kt)("h3",{id:"isveryverbose"},"isVeryVerbose"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"isVeryVerbose(): bool"))),(0,a.kt)("p",null,"Check if th ",(0,a.kt)("inlineCode",{parentName:"p"},"dep")," command was started with the ",(0,a.kt)("inlineCode",{parentName:"p"},"-vv")," option."),(0,a.kt)("h3",{id:"isdebug"},"isDebug"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"isDebug(): bool"))),(0,a.kt)("p",null,"Check if the ",(0,a.kt)("inlineCode",{parentName:"p"},"dep")," command was started with the ",(0,a.kt)("inlineCode",{parentName:"p"},"-vvv")," option."),(0,a.kt)("h3",{id:"commandexist"},"commandExist"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"commandExist(string $command): bool"))),(0,a.kt)("p",null,"Check if a command exists."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"if (commandExist('composer')) {\n    ...\n}\n")),(0,a.kt)("h3",{id:"parse"},"parse"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"parse(string $line): string"))),(0,a.kt)("p",null,"Parse config occurrence ",(0,a.kt)("inlineCode",{parentName:"p"},"{{")," ",(0,a.kt)("inlineCode",{parentName:"p"},"}}")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"$line"),"."))}k.isMDXComponent=!0}}]);